#!/usr/bin/env bash

#
# Pre-commit hook.
# The pre-commit hook will ensure that the following is available for the project:
#
#    - PHP is available for the terminal
#    - Composer.json has been downloaded for the project
#    - Composer is available for the project
#    - Ensure that vendor has been added to the .gitignore
#    - Composer has been run and vendors are available
#
# It then finds all scripts that are in pre-commit-hooks and will execute them
# prior to allowing the user to continue with a commit.
#

# CONFIGURAITON:
# Variables here should be configured per project.
# -------------------------------------------
UPSTREAM=${1:-master}
# ---

ROOT="$(pwd)/"

# Test to see if we're on the upstream branch.
CUR=`git rev-parse --abbrev-ref HEAD`
if [ $UPSTREAM == $CUR ]; then
  echo "Unable to run against the upstream branch, swap to a feature!"
  exit 0 # exit with 0 allows git commit to continue.
fi

# Test to see if the directory structure matches the Acquia Cloud expectation.
if [ ! -d "$ROOT/docroot" ]; then
  echo "Unable to locate Drupal. This needs to be run from an Acquia directory configuration."
  exit 1
fi

# Test php is available (should be if terminal is opened with DD)
php -v > /dev/null 2>&1
PHP_IS_INSTALLED=$?

if [ $PHP_IS_INSTALLED -ne 0 ]; then
  echo "Unable to find PHP. Please run from terminal with php on path"
  exit 1
fi

# Test to see if composer.json has been downloaded.
if [ ! -f "$ROOT/composer.json" ]; then
  wget -O $ROOT/composer.json https://gist.githubusercontent.com/steveworley/5b901e7397327635b230fc62b98af0d5/raw/49995b34f88b51083f0d4dd37c96d356c8ac70a5/composer.json
fi

# Update the gitignore.
IGNORE_VENDOR="vendor"
IGNORE_COMPOSER="composer.phar"
grep -q "$IGNORE_VENDOR" "$ROOT/.gitignore" || echo "$IGNORE_VENDOR" >> "$ROOT/.gitignore"
grep -q "$IGNORE_COMPOSER" "$ROOT/.gitignore" || echo "$IGNORE_COMPOSER" >> "$ROOT/.gitignore"

# Test if Composer is installed
$ROOT/composer.phar -v > /dev/null 2>&1
COMPOSER_IS_INSTALLED=$?

if [ $COMPOSER_IS_INSTALLED -ne 0 ]; then
  echo "Composer not installed... attmepting to install."
  curl -sS https://getcomposer.org/installer | php;
fi

# Test if Composer is installed
$ROOT/composer.phar -v > /dev/null 2>&1
COMPOSER_IS_INSTALLED=$?

if [ $COMPOSER_IS_INSTALLED -ne 0 ]; then
  # Composer could not be installed... prompt to install manually and retry.
  echo "Unable to install Composer. Please install manually and retry."
  exit 1
fi

# Test to see if dependencies have been installed.
if [ ! -d "$ROOT/vendor" ]; then
  echo "Installing dependencies..."
  $ROOT/composer.phar install

  # Register Drupal CS standards.
  PHPCS="$ROOT/vendor/bin/phpcs"
  $PHPCS --config-set installed_paths $ROOT/vendor/drupal/coder/coder_sniffer
fi

# Locate the hooks that we should run before a commit.
# ------------------------------------------------------
HOOKS=`find $ROOT/.git/hooks/pre-commit-hooks -iname "*.sh"`
for hook in $HOOKS
do
  sh $hook $UPSTREAM

  # Capture the exit status of the command, the git commit will be aborted if
  # we return a non-zero status.
  STATUS=$?
  if [ $STATUS -ne 0 ]; then
    exit $STATUS
  fi;
done
